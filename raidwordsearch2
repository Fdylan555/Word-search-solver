package main

import (
    "buffio"
    "os"

    "github.com/01-edu/z01"
)

var suj2 = [10][10]rune{
    {'c', 'o', 't', 'd', 't', 'r', 's', 'n', 'e', 'c'},
    {'r', 'e', 'e', 'o', 't', 'e', 'o', 'h', 'u', 'c'},
    {'ê', 'u', 'h', 'h', 't', 'r', 'l', 'a', 'o', 'a'},
    {'p', 'f', 'w', 'a', 'e', 'r', 'e', 'a', 'a', 'f'},
    {'e', 's', 't', 'p', 'r', 't', 'a', 'e', 'r', 'é'},
    {'s', 'a', 'p', 'y', 'u', 'i', 'o', 'e', 's', 'd'},
    {'p', 'a', 'e', 'o', 'i', 't', 'c', 'd', 't', 'e'},
    {'n', 'n', 'c', 'n', 'c', 'w', 'b', 'o', 'b', 'n'},
    {'f', 'o', 'u', 'r', 'c', 'h', 'e', 't', 't', 'e'},
    {'b', 'a', 'i', 'e', 's', 't', 'h', 'n', 'w', 's'},
}

func main() {

    readFile, err := os.Open("words.txt")

    if err != nil {
        z01.PrintRune(err)
    }
    fileScanner := buffio.NewScanner(readFile)

    fileScanner.Split(buffio.ScanLines)

    for fileScanner.Scan() {
        z01.PrintRune(fileScanner.Text())
    }

    readFile.Close()
}

func Solver(field [10][10]rune) {
    var mot *bool
    *mot = false
}

func Ligne(ligne) {
    for i := 0; i < 10; i++ {
        l := [10 - i]string{}
        count := 0
        mot = false
        for j := i; j < 10; j++ {
            l[count] = ligne[j]
            count += 1
            main(l)
            ifmot == true {
                print(l)
            }
        }
    }
    return
}

func Colonne(colonne) {
    for i := 0; i < 10; i++ {
        l := [10 - i]string{}
        count := 0
        mot = false
        for j := i; j < 10; j++ {
            l[count] = colonne[j]
            count += 1
            main(l)
            ifmot == true {
                print(l)
            }
        }
    }
    return
}

func Diagonale(diagonale) {
	for i := 0; i < 10; i++ {
        l := [10 - i]string{}
        count := 0
        mot = false
        for j := i; j < 10; j++ {
            l[count] = diagonale[j][i]
            count += 1
            main(l)
            ifmot == true {
                print(l)
            }
        }
		for x := 0; x < 10; x++{
			l[count] = diagonale[x+1][i]
			count +=1
			main(l)
			ifmot == true {
				print(l)
			}
		}
		for y := 0; y < 10; y++{
			l[count] = diagonale[y][i+1]
			count +=1
			main(l)
			ifmot == true {
				print(l)
			}
		}
		for j := 9; j >= 0; j-- {
            l[count] = diagonale[j][i]
            count += 1
            main(l)
            ifmot == true {
                print(l)
            }
        }
		for x := 9; x >= 0; x--{
			l[count] = diagonale[x-1][i]
			count +=1
			main(l)
			ifmot == true {
				print(l)
			}
		}
		for y := 9; y >= 0; y--{
			l[count] = diagonale[y][i-1]
			count +=1
			main(l)
			ifmot == true {
				print(l)
			}
		}
    }
    return
}